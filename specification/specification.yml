openapi: 3.1.0
info:
  title: API сервер для личного проекта «Что посмотреть».
  description: |-
    * Список ресурсов и маршрутов сервера «Что посмотреть».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: promo
    description: Действия с промо фильмом.
  - name: films
    description: Действия с фильмами.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Информация для авторизации пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginUser"
        required: true

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authorize"

        "401":
          description: Пользователь не авторизован.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            $ref: "#/components/schemas/x-token"

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "401":
          description: Пользователь не авторизован

  /users/logout:
    get:
      tags:
        - users
      summary: Завершает сессию пользователя
      description: Выход из закрытой части приложения
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            $ref: "#/components/schemas/x-token"

      responses:
        "204":
          description: Сеанс завершён

        "403":
          description: Выход не выполнен

  /films:
    get:
      tags:
        - films
      summary: Получить список фильмов
      description: Возвращает массив фильмов. Каждый фильм описан в виде объекта.

      responses:
        "200":
          description: Массив фильмов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: "#/components/schemas/film"
                    - type: object

components:
  schemas:
    createUser:
      type: object
      properties:
        email:
          type: string
          example: creamy@htmlacademy.ru

        avatarPath:
          type: string
          example: /avatar/534545.jpg

        name:
          type: string
          example: Creamy

        password:
          type: string
          example: 123456

    user:
      type: object
      properties:
        email:
          type: string
          example: creamy@htmlacademy.ru

        avatarPath:
          type: string
          example: /avatar/534545.jpg

        name:
          type: string
          example: Creamy

    loginUser:
      type: object
      properties:
        email:
          type: string
          example: creamy@htmlacademy.ru

        password:
          type: string
          example: 123456

    authorize:
      type: object
      properties:
        token:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    x-token:
      type: string
      example: 6329c3d6a04ab1061c6425ea

    film:
      type: object
      properties:
        id:
          type: string
          example: fs7adf65a76fsafsd67f5
        name:
          type: string
          example: Операция «Ы» и другие приключения Шурика
        description:
          type: string
          example: Инженер-изобретатель Тимофеев сконструировал машину времени, которая соединила его квартиру с далеким шестнадцатым веком - точнее, с палатами государя Ивана Грозного. Туда-то и попадают тезка царя пенсионер-общественник Иван Васильевич Бунша и квартирный вор Жорж Милославский. На их место в двадцатом веке <переселяется> великий государь. Поломка машины времени приводит ко множеству неожиданных и забавных событий...
        posterImage:
          type: string
          example: img/the-grand-budapest-hotel-poster.jpg
        previewImage:
          type: string
          example: img/the-grand-budapest-hotel.jpg
        backgroundImage:
          type: string
          example: img/the-grand-budapest-hotel-bg.jpg
        backgroundColor:
          type: string
          example: "#ffffff"
        videoLink:
          type: string
          example: https://some-link
        previewVideoLink:
          type: string
          example: https://some-link
        rating:
          type: number
          example: 8.9
        scoresCount:
          type: number
          example: 240
        director:
          type: string
          example: Wes Anderson
        starring:
          type: array
          items:
            type: string
            example: Bill Murray
        runTime:
          type: number
          example: 99
        genre:
          type: string
          example: Comedy
        released:
          type: number
          example: 2014
        isFavorite:
          type: boolean
          example: false
