openapi: 3.1.0
info:
  title: API сервер для личного проекта «Что посмотреть».
  description: |-
    * Список ресурсов и маршрутов сервера «Что посмотреть».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: promo
    description: Действия с промо фильмом.
  - name: films
    description: Действия с фильмами.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Информация для авторизации пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginUser"
        required: true

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authorize"

        "401":
          description: Пользователь не авторизован.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      parameters:
        - name: X-Token
          in: header
          description: Авторизационный токен пользователя
          required: true
          schema:
            $ref: "#/components/schemas/x-token"

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "401":
          description: Пользователь не авторизован

components:
  schemas:
    createUser:
      type: object
      properties:
        email:
          type: string
          example: creamy@htmlacademy.ru

        avatarPath:
          type: string
          example: /avatar/534545.jpg

        name:
          type: string
          example: Creamy

        password:
          type: string
          example: 123456

    user:
      type: object
      properties:
        email:
          type: string
          example: creamy@htmlacademy.ru

        avatarPath:
          type: string
          example: /avatar/534545.jpg

        name:
          type: string
          example: Creamy

    loginUser:
      type: object
      properties:
        email:
          type: string
          example: creamy@htmlacademy.ru

        password:
          type: string
          example: 123456

    authorize:
      type: object
      properties:
        token:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    x-token:
      type: string
      example: 6329c3d6a04ab1061c6425ea
